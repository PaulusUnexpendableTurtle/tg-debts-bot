import { StatsRow, Offer, OfferTemplate } from './common_types';
import util from './util';

import Bot from 'node-telegram-bot-api';

export default {
    start: {
        text() {
            return `–ü—Ä–∏–≤–µ—Ç! üëã\n`
                + `–Ø ‚Äî –∑–∞–ø–∏—Å–Ω–∞—è –∫–Ω–∏–∂–∫–∞ –¥–æ–ª–≥–æ–≤.\n\n`
                + `üí∞ –ß—Ç–æ–±—ã –ø–æ–ø—Ä–æ—Å–∏—Ç—å –≤ –¥–æ–ª–≥, –Ω–∞–ø–∏—à–∏ —Å—É–º–º—É.\n\n`
                + `üóÑ –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –¥–æ–ª–≥–∏, –Ω–∞–ø–∏—à–∏ /stats.\n\n`
                + `üëã –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è –µ—â—ë —Ä–∞–∑, –Ω–∞–ø–∏—à–∏ /start.\n\n`
                + `‚ùì –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ, –Ω–∞–ø–∏—à–∏ /help.`;
        }
    },
    help: {
        text(name: string) {
            return ''
                + `–ö–æ–º–∞–Ω–¥—ã ([—Ç–µ–∫—Å—Ç] ‚Äî –ø–æ –≤–∫—É—Å—É):\n\n`
                + ` N [—Ç–µ–∫—Å—Ç] ‚Äî —Ç—ã –ø–æ–ª—É—á–∏–ª N üí∞.\n`
                + `-N [—Ç–µ–∫—Å—Ç] ‚Äî —Ç—ã –æ—Ç–¥–∞–ª N üí∞.\n`
                + `/stats ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –¥–æ–ª–≥–∏.\n`
                + `/share ‚Äî –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —ç—Ç–∏–º ü§ñ.\n`
                + `/start ‚Äî –∫—Ä–∞—Ç–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞.\n`
                + `/help ‚Äî —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n`
                + `–ò–Ω–ª–∞–π–Ω (@${name} + –∫–æ–º–∞–Ω–¥–∞):\n\n`
                + `–ø—É—Å—Ç–æ ‚Äî –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —ç—Ç–∏–º ü§ñ.\n`
                + ` N [—Ç–µ–∫—Å—Ç] ‚Äî —Ç—ã –ø–æ–ª—É—á–∏–ª üí∞.\n`
                + `-N [—Ç–µ–∫—Å—Ç] ‚Äî —Ç—ã –æ—Ç–¥–∞–ª üí∞.`;
        }
    },
    share: {
        text(name: string) {
            return ''
                + `–ü—Ä–∏–≤–µ—Ç! üëã\n`
                + `–Ø ‚Äî –î–æ–ª–≥–µ—Ä (@${name}), –∑–∞–ø–∏—Å–Ω–∞—è –∫–Ω–∏–∂–∫–∞ –¥–æ–ª–≥–æ–≤.\n`
                + `–ï—â—ë —É–≤–∏–¥–∏–º—Å—è?`;
        },
        keyboard(): Bot.SendMessageOptions {
            return {
                reply_markup: {
                    inline_keyboard: [[{
                        text: '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è ü§ñ',
                        switch_inline_query: ''
                    }]]
                }
            };
        }, 
        article: {
            title() {
                return '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è ü§ñ';
            }
        }
    },
    stats: {
        text(table: StatsRow[]) {
            if (!table.length)
                return '–î–æ–ª–≥–æ–≤ –Ω–µ—Ç üëè';
            let debts = table.filter(debt => debt.amount > 0);
            let owes = table.filter(debt => debt.amount < 0).map(util.lineAbs);
            return ''
                + util.lineReduce(debts, '–í—ã –¥–æ–ª–∂–Ω—ã:\n')
                + (debts.length && owes.length ? '\n\n' : '')
                + util.lineReduce(owes, '–í–∞–º –¥–æ–ª–∂–Ω—ã:\n');
        },
        callback_answer_text() {
            return '–û–±–Ω–æ–≤–ª–µ–Ω–æ.';
        },
        keyboard(): Bot.SendMessageOptions {
            return {
                reply_markup: {
                    inline_keyboard: [[{
                        text: '–û–±–Ω–æ–≤–∏—Ç—å üîÑ',
                        callback_data: 'update'
                    }]]
                }
            };
        }
    },
    debt: {
        text(text: string, amount: number) {
            if (text && (text.length > 1)) {
                return text.substr(1)
                    + `\n\n`
                    + `‚ÄºÔ∏è ${amount > 0 ? '—Ö–æ—á–µ—Ç' : '–¥–∞—ë—Ç'} ${Math.abs(amount)} ‚ÄºÔ∏è`;
            } else {
                return `–Ø ${amount > 0 ? '—Ö–æ—á—É' : '–¥–∞—é'}`
                    + ` ${Math.abs(amount)}`;
            }
        },
        keyboard: function(
            text: string,
            amount: number
        ): Bot.SendMessageOptions {
            return {
                reply_markup: {
                    inline_keyboard: [[{
                        text: `–Ø ${amount < 0 ? '–æ—Ç–¥–∞–ª' : '–ø–æ–ª—É—á–∏–ª'} üí∞`,
                        switch_inline_query: `${amount}${text || ''}`
                    }]]
                }
            };
        },
        amount_overflow_text: function(): string {
            return '‚ùå –†–∞–∑–º–µ—Ä –¥–æ–ª–≥–∞ –Ω–µ—Ä–µ–∞–ª—å–Ω–æ –±–æ–ª—å—à–æ–π ‚ùå';
        },
        article: {
            title: function(amount: number): string {
                return `${amount > 0 ? `–ü–æ–ø—Ä–æ—Å–∏—Ç—å` : `–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å`} ${Math.abs(amount)}`;
            },
            keyboard: function(): Bot.InlineKeyboardMarkup {
                return {
                    inline_keyboard: [[
                        { text: '–û–∫ üåù', callback_data: '1' },
                        { text: '–ù–µ üåö', callback_data: '0' }
                    ]]
                };
            }
        }
    },
    deal: {
        text: function(offer: Offer): string {
            let arg1 = offer.amount > 0
                    ? `–¥–æ–ª–≥–∞ (–∫–æ–ª-–≤–æ: ${offer.amount})`
                    : -offer.amount;
            let arg2 = offer.accept
                    ? `–ø—Ä–∏–Ω—è—Ç–æ`
                    : `–æ—Ç–≤–µ—Ä–≥–Ω—É—Ç–æ`;
            return `–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ ${arg1} –±—ã–ª–æ ${arg2} @${offer.to}.`;
        },
        self_accept_text: function(): string {
            return '–ù–µ–ª—å–∑—è –¥–æ–ª–∂–∞—Ç—å —Å–µ–±–µ';
        },
        cancel_text: function(owner: string): string {
            return `–û—Ç–º–µ–Ω–µ–Ω–æ @${owner}`;
        },
        expire_text: function(offer: OfferTemplate): string {
            return `–û–∂–∏–¥–∞–Ω–∏–µ ${offer.amount} –∏—Å—Ç–µ–∫–ª–æ`;
        }
    }
};
